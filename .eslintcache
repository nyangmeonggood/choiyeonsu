[{"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\index.js":"1","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\App.js":"2","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Main.js":"3","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Circle.js":"4","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Square.js":"5","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Triangle.js":"6","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\mousePos.js":"7","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\MousePos.js":"8","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\Color.js":"9","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Name.js":"10","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\Parallex.js":"11","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\routes\\TheKingOfMains.js":"12","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\routes\\Buttonbutton.js":"13","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\ParticleCanvas.js":"14","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Intro.js":"15","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\routes\\About.js":"16","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Cursor.js":"17","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Loading.js":"18","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Header.js":"19","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Logo.js":"20","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\SeperateText.js":"21","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\routes\\Home.js":"22","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\ShadowTitle.js":"23","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Next.js":"24","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\ChangePage.js":"25","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Frame.js":"26","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\CursorCanvas.js":"27","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\WorkTemplete.js":"28","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Bar.js":"29"},{"size":272,"mtime":1612490374315,"results":"30","hashOfConfig":"31"},{"size":2200,"mtime":1612231363688,"results":"32","hashOfConfig":"31"},{"size":1160,"mtime":1612324313394,"results":"33","hashOfConfig":"31"},{"size":273,"mtime":1611214153840,"results":"34","hashOfConfig":"31"},{"size":254,"mtime":1612154855569,"results":"35","hashOfConfig":"31"},{"size":264,"mtime":1611214282616,"results":"36","hashOfConfig":"31"},{"size":531,"mtime":1611290368957,"results":"37","hashOfConfig":"31"},{"size":531,"mtime":1611290368957,"results":"38","hashOfConfig":"31"},{"size":237,"mtime":1612349618339,"results":"39","hashOfConfig":"31"},{"size":1221,"mtime":1611303570925,"results":"40","hashOfConfig":"31"},{"size":11450,"mtime":1612436147589,"results":"41","hashOfConfig":"31"},{"size":369,"mtime":1611892222764,"results":"42","hashOfConfig":"31"},{"size":356,"mtime":1611892233281,"results":"43","hashOfConfig":"31"},{"size":4317,"mtime":1612325028667,"results":"44","hashOfConfig":"31"},{"size":5593,"mtime":1611760753982,"results":"45","hashOfConfig":"31"},{"size":11994,"mtime":1612426370533,"results":"46","hashOfConfig":"31"},{"size":1036,"mtime":1611660327736,"results":"47","hashOfConfig":"31"},{"size":1313,"mtime":1612490086915,"results":"48","hashOfConfig":"31"},{"size":4250,"mtime":1612171962688,"results":"49","hashOfConfig":"31"},{"size":497,"mtime":1611590153620,"results":"50","hashOfConfig":"31"},{"size":506,"mtime":1611677624449,"results":"51","hashOfConfig":"31"},{"size":1001,"mtime":1612324195310,"results":"52","hashOfConfig":"31"},{"size":1389,"mtime":1612324657504,"results":"53","hashOfConfig":"31"},{"size":2299,"mtime":1612447180642,"results":"54","hashOfConfig":"31"},{"size":576,"mtime":1611799810947,"results":"55","hashOfConfig":"31"},{"size":5266,"mtime":1612435426516,"results":"56","hashOfConfig":"31"},{"size":6234,"mtime":1612438020864,"results":"57","hashOfConfig":"31"},{"size":1397,"mtime":1612324707423,"results":"58","hashOfConfig":"31"},{"size":270,"mtime":1612154992774,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kg4ws1",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\index.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\App.js",[],["124","125"],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Main.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Circle.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Square.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Triangle.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\mousePos.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\MousePos.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\Color.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Name.js",[],["126","127"],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\Parallex.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\routes\\TheKingOfMains.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\routes\\Buttonbutton.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\ParticleCanvas.js",["128"],"import { useCallback, useEffect, useRef } from \"react\";\r\nimport { ColorArray } from \"../hook/Color.js\";\r\nimport \"../scss/particleCanvas.scss\";\r\n\r\nexport default function ParticleCanvas({ stageWidth, stageHeight }) {\r\n  const maxParticleCanvasNumber = 1000;\r\n  const $Particle = useRef(),\r\n    $ParticleCanvas = useRef(),\r\n    $ParticleArray = useRef(),\r\n    $GridArray = useRef(),\r\n    $ctxParticleCanvas = useRef();\r\n  const colorArray = ColorArray;\r\n\r\n  let canvasMouse = {\r\n    x: undefined,\r\n    y: undefined,\r\n    radius: 100,\r\n  };\r\n\r\n  // canvas\r\n  const currentMousePos = (e) => {\r\n    canvasMouse.x = e.clientX;\r\n    canvasMouse.y = e.clientY;\r\n  };\r\n\r\n  const ParticleAnimate = useCallback(() => {\r\n    requestAnimationFrame(ParticleAnimate);\r\n    $ctxParticleCanvas.current.clearRect(\r\n      0,\r\n      0,\r\n      $ctxParticleCanvas.current.canvas.width,\r\n      $ctxParticleCanvas.current.canvas.height\r\n    );\r\n\r\n    for (var i = 0; i < $ParticleArray.current.length; i++) {\r\n      $ParticleArray.current[i].update($ctxParticleCanvas.current, canvasMouse);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    $ParticleArray.current = [];\r\n    $ParticleCanvas.current.width = stageWidth;\r\n    $ParticleCanvas.current.height = stageHeight;\r\n\r\n    for (let i = 0; i < maxParticleCanvasNumber; i++) {\r\n      let x = Math.random() * (stageWidth - 40) + 20,\r\n        y = Math.random() * (stageHeight - 40) + 20,\r\n        dx = Math.random() * 2 - 1,\r\n        dy = Math.random() * 2 - 1,\r\n        figure = Math.floor(Math.random() * 3),\r\n        angle = figure + 2,\r\n        color = colorArray[figure];\r\n\r\n      $ParticleArray.current.push(\r\n        new SetParticleCanvas(\r\n          x,\r\n          y,\r\n          dx,\r\n          dy,\r\n          stageWidth,\r\n          stageHeight,\r\n          angle,\r\n          color\r\n        )\r\n      );\r\n    }\r\n  }, [stageWidth, stageHeight, $ParticleArray, $GridArray, colorArray]);\r\n\r\n  useEffect(() => {\r\n    $ctxParticleCanvas.current = $ParticleCanvas.current.getContext(\"2d\");\r\n    ParticleAnimate();\r\n  }, [ParticleAnimate]);\r\n\r\n  //mousemove\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", (e) => {\r\n      currentMousePos(e);\r\n    });\r\n\r\n    return window.removeEventListener(\"mousemove\", (e) => {\r\n      currentMousePos(e);\r\n    });\r\n  });\r\n  //**mousemove\r\n\r\n  return (\r\n    <>\r\n      <section id=\"Particle\" ref={$Particle}>\r\n        <canvas id=\"ParticleCanvas\" ref={$ParticleCanvas}></canvas>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nclass SetParticleCanvas {\r\n  constructor(x, y, dx, dy, stageWidth, stageHeight, angle, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.size = 0;\r\n    this.stageWidth = stageWidth;\r\n    this.stageHeight = stageHeight;\r\n    this.angle = angle;\r\n    this.figureAngle = (Math.PI * 2) / this.angle;\r\n    this.color = color;\r\n\r\n    this.boundary = 30;\r\n    this.minSize = 0;\r\n    this.maxSize = 50;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.color;\r\n    if (this.angle === 2) {\r\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    } else {\r\n      ctx.translate(this.x, this.y);\r\n      ctx.rotate(\r\n        Math.PI / this.angle +\r\n          Math.atan2(\r\n            this.stageWidth / 2 - this.x,\r\n            -this.stageHeight / 2 + this.y\r\n          )\r\n      );\r\n\r\n      for (let i = 0; i < this.angle; i++) {\r\n        let px = Math.sin(this.figureAngle * i) * this.size,\r\n          py = Math.cos(this.figureAngle * i) * this.size;\r\n        i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\r\n      }\r\n    }\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  update(ctx, mouse) {\r\n    if (this.x + this.size > this.stageWidth || this.x - this.size < 0) {\r\n      this.dx *= -1;\r\n    }\r\n    if (this.y + this.size > this.stageHeight || this.y - this.size < 0) {\r\n      this.dy *= -1;\r\n    }\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n\r\n    if (\r\n      mouse.x - this.x < mouse.radius &&\r\n      mouse.x - this.x > -mouse.radius &&\r\n      mouse.y - this.y < mouse.radius &&\r\n      mouse.y - this.y > -mouse.radius\r\n    ) {\r\n      if (this.size < this.maxSize) {\r\n        this.size += 3;\r\n      }\r\n    } else if (this.size > this.minSize) {\r\n      this.size += -1;\r\n    }\r\n\r\n    if (this.size < 0) this.size = 0;\r\n\r\n    this.draw(ctx);\r\n  }\r\n}","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Intro.js",["129"],"import { useCallback, useEffect, useRef } from \"react\";\r\nimport { ColorArray } from \"../hook/Color\";\r\nimport \"../scss/intro.scss\";\r\n\r\nexport default function Intro({\r\n  setCompLoading,\r\n  stageWidth,\r\n  stageHeight,\r\n  setMenu,\r\n}) {\r\n  const introRef = useRef(\"\"),\r\n    titleRef = useRef(\"\"),\r\n    greetRef = useRef(\"\"),\r\n    personRef = useRef(\"\"),\r\n    greetEndRef = useRef(\"\");\r\n\r\n  //canvas\r\n  const maxParticleCanvasNumber = 1000;\r\n  const $ParticleCanvas = useRef(),\r\n    $ParticleArray = useRef(),\r\n    $ctxParticleCanvas = useRef();\r\n  const colorArray = ColorArray;\r\n\r\n  let bomb = {\r\n    x: undefined,\r\n    y: undefined,\r\n    radius: 100,\r\n  };\r\n  //*canvas\r\n\r\n  const setStart = () => {\r\n    introRef.current.classList.add(\"active\");\r\n    introRef.current.addEventListener(\"transitionend\", () => {\r\n      setCompLoading(true);\r\n      window.localStorage.setItem(\"Intro\", false);\r\n\r\n      let randomBlink = Math.floor(Math.random() * ColorArray.length);\r\n      document.querySelector(\".blink\").style.backgroundColor =\r\n        ColorArray[randomBlink];\r\n      setMenu(true);\r\n    });\r\n  };\r\n\r\n  const setBomb = () => {\r\n    bomb.x = stageWidth / 2;\r\n    bomb.y = stageHeight / 2;\r\n    setInterval(() => {\r\n      bomb.x = bomb.y = undefined;\r\n    }, 1000);\r\n  };\r\n\r\n  const ParticleAnimate = useCallback(() => {\r\n    requestAnimationFrame(ParticleAnimate);\r\n    $ctxParticleCanvas.current.clearRect(\r\n      0,\r\n      0,\r\n      $ctxParticleCanvas.current.canvas.width,\r\n      $ctxParticleCanvas.current.canvas.height\r\n    );\r\n    for (var i = 0; i < $ParticleArray.current.length; i++) {\r\n      $ParticleArray.current[i].update($ctxParticleCanvas.current, bomb);\r\n    }\r\n  }, [$ParticleArray, bomb]);\r\n\r\n  useEffect(() => {\r\n    $ParticleArray.current = [];\r\n    $ParticleCanvas.current.width = stageWidth;\r\n    $ParticleCanvas.current.height = stageHeight;\r\n\r\n    for (let i = 0; i < maxParticleCanvasNumber; i++) {\r\n      let x = Math.random() * (stageWidth - 40) + 20,\r\n        y = Math.random() * (stageHeight - 40) + 20,\r\n        dx = Math.random() * 2 - 1,\r\n        dy = Math.random() * 2 - 1,\r\n        figure = Math.floor(Math.random() * 3),\r\n        angle = figure + 2,\r\n        color = colorArray[figure];\r\n\r\n      $ParticleArray.current.push(\r\n        new SetIntroParticleCanvas(\r\n          x,\r\n          y,\r\n          dx,\r\n          dy,\r\n          stageWidth,\r\n          stageHeight,\r\n          angle,\r\n          color\r\n        )\r\n      );\r\n    }\r\n\r\n    $ctxParticleCanvas.current = $ParticleCanvas.current.getContext(\"2d\");\r\n\r\n    ParticleAnimate();\r\n  }, [stageWidth, stageHeight, $ParticleArray, ParticleAnimate, colorArray]);\r\n\r\n  useEffect(() => {\r\n    greetRef.current.classList.add(\"active\");\r\n    animationEnd(greetRef, personRef, setBomb, 5500);\r\n    animationEnd(personRef, greetEndRef, setStart, 2000);\r\n  });\r\n  return (\r\n    <>\r\n      <section id=\"intro\" ref={introRef}>\r\n        <div className=\"title\" ref={titleRef}>\r\n          <p className=\"greet\" ref={greetRef}>\r\n            안녕하세요. 반갑습니다.\r\n          </p>\r\n          <ul className=\"person\" ref={personRef}>\r\n            <li>\r\n              <span>\r\n                <b>뛰는 사람</b> 위의,\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span>\r\n                <b>나는 사람</b> 위의,\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span>\r\n                <b>즐기는 사람</b>.\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          <p className=\"greetEnd\" ref={greetEndRef}>\r\n            최연수입니다.\r\n          </p>\r\n        </div>\r\n        <canvas ref={$ParticleCanvas}></canvas>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nconst animationEnd = (current, next, nextFunc, time) => {\r\n  current.current.addEventListener(\"animationend\", () => {\r\n    next.current.classList.add(\"active\");\r\n    if (nextFunc) {\r\n      setTimeout(() => nextFunc(), time);\r\n    }\r\n  });\r\n};\r\n\r\nclass SetIntroParticleCanvas {\r\n  constructor(x, y, dx, dy, stageWidth, stageHeight, angle, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.size = 0;\r\n    this.stageWidth = stageWidth;\r\n    this.stageHeight = stageHeight;\r\n    this.angle = angle;\r\n    this.figureAngle = (Math.PI * 2) / this.angle;\r\n    this.color = color;\r\n\r\n    this.boundary = 30;\r\n    this.minSize = 0;\r\n    this.maxSize = 50;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.color;\r\n    if (this.angle === 2) {\r\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    } else {\r\n      ctx.translate(this.x, this.y);\r\n      ctx.rotate(\r\n        Math.PI / this.angle +\r\n          Math.atan2(\r\n            this.stageWidth / 2 - this.x,\r\n            -this.stageHeight / 2 + this.y\r\n          )\r\n      );\r\n\r\n      for (let i = 0; i < this.angle; i++) {\r\n        let px = Math.sin(this.figureAngle * i) * this.size,\r\n          py = Math.cos(this.figureAngle * i) * this.size;\r\n        i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\r\n      }\r\n    }\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  update(ctx, mouse) {\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n\r\n    if (\r\n      mouse.x - this.x < mouse.radius &&\r\n      mouse.x - this.x > -mouse.radius &&\r\n      mouse.y - this.y < mouse.radius &&\r\n      mouse.y - this.y > -mouse.radius\r\n    ) {\r\n      if (this.size < this.maxSize) {\r\n        this.size += 3;\r\n      }\r\n    } else if (this.size > this.minSize) {\r\n      this.size += -1;\r\n    }\r\n\r\n    if (this.size < 0) this.size = 0;\r\n\r\n    this.draw(ctx);\r\n  }\r\n}\r\n","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\routes\\About.js",["130","131"],"import { useCallback, useEffect, useRef } from \"react\";\r\nimport {\r\n  setAbility,\r\n  setdivLineRefParallex,\r\n  setInfoBoxParallex,\r\n  setPositionParallex,\r\n  setTimelineParallex,\r\n  setTitleParallex,\r\n} from \"../hook/Parallex\";\r\nimport Frame from \"../Components/Frame\";\r\nimport ShadowTitle from \"../hook/ShadowTitle\";\r\nimport CursorCanvas from \"../Components/CursorCanvas.js\";\r\nimport Next from \"../Components/Next\";\r\nimport faceImage from \"../img/face_circle.png\";\r\nimport Logo from \"../figure/Logo.js\";\r\nimport Circle from \"../figure/Circle\";\r\nimport Bar from \"../figure/Bar\";\r\nimport Triangle from \"../figure/Triangle\";\r\nimport { ColorArray, abilityColorArray } from \"../hook/Color.js\";\r\nimport \"../scss/about.scss\";\r\n\r\nexport default function About({ stageWidth, stageHeight }) {\r\n  const aboutRef = useRef(),\r\n    divLineLeftRef = useRef(),\r\n    divLineRightRef = useRef();\r\n\r\n  const maxbGCanvasNumber = 30;\r\n\r\n  const $AbilityBg = useRef(),\r\n    $bGCanvas = useRef(),\r\n    $bgArray = useRef(),\r\n    $ctxbGCanvas = useRef();\r\n\r\n  let scrollY, title;\r\n\r\n  const scrollEvent = (part) => {\r\n    scrollY = window.scrollY;\r\n    title = document.querySelector(\".shadowTitle\");\r\n\r\n    setTitleParallex(title, scrollY);\r\n\r\n    setActive(aboutRef.current, scrollY);\r\n    setPart(aboutRef.current, scrollY);\r\n    setPositionParallex(\r\n      part[1],\r\n      document.querySelector(\".part2 .content\"),\r\n      scrollY\r\n    );\r\n    setPositionParallex(\r\n      part[2],\r\n      document.querySelector(\".part3 .content\"),\r\n      scrollY\r\n    );\r\n\r\n    setInfoBoxParallex(part[1], scrollY, part[1], part[2]);\r\n    part[1].querySelector(\r\n      \".content .pic img\"\r\n    ).style.width = part[1].querySelector(\".content .pic .bg\").style.width = `${\r\n      stageWidth * 0.45\r\n    }px`;\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      setAbility(\r\n        part[2].querySelector(`.content ul li:nth-of-type(${i + 1})`),\r\n        scrollY,\r\n        part[2],\r\n        i\r\n      );\r\n    }\r\n\r\n    setTimelineParallex(part[3], scrollY);\r\n\r\n    if (divLineLeftRef.current && divLineRightRef.current) {\r\n      setdivLineRefParallex(\r\n        divLineLeftRef.current,\r\n        scrollY,\r\n        part[1],\r\n        part[2],\r\n        part[3],\r\n        \"left\"\r\n      );\r\n      setdivLineRefParallex(\r\n        divLineRightRef.current,\r\n        scrollY,\r\n        part[1],\r\n        part[2],\r\n        part[3],\r\n        \"right\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (aboutRef.current) {\r\n        scrollEvent(aboutRef.current.children);\r\n      }\r\n    });\r\n\r\n    return window.removeEventListener(\"scroll\", () => {\r\n      if (aboutRef.current) {\r\n        scrollEvent(aboutRef.current.children);\r\n      }\r\n    });\r\n  });\r\n\r\n  const bgAnimate = useCallback(() => {\r\n    requestAnimationFrame(bgAnimate);\r\n    $ctxbGCanvas.current.clearRect(\r\n      0,\r\n      0,\r\n      $ctxbGCanvas.current.canvas.width,\r\n      $ctxbGCanvas.current.canvas.height\r\n    );\r\n\r\n    for (var i = 0; i < $bgArray.current.length; i++) {\r\n      $bgArray.current[i].update($ctxbGCanvas.current);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    $bgArray.current = [];\r\n    $bGCanvas.current.width = stageWidth;\r\n    $bGCanvas.current.height = stageHeight;\r\n\r\n    for (let i = 0; i < maxbGCanvasNumber; i++) {\r\n      let x = Math.random() * (stageWidth * 0.5 - 40) + 20,\r\n        y = Math.random() * (stageHeight - 40) + 20,\r\n        dx = Math.random() * 2 - 1,\r\n        dy = Math.random() * 2 - 1,\r\n        figure = Math.floor(Math.random() * 3),\r\n        angle = figure + 2,\r\n        color = abilityColorArray[Math.floor(Math.random() * 4)];\r\n\r\n      $bgArray.current.push(\r\n        new SetbGCanvas(x, y, dx, dy, stageWidth, stageHeight, angle, color)\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    $ctxbGCanvas.current = $bGCanvas.current.getContext(\"2d\");\r\n    bgAnimate();\r\n  }, [bgAnimate]);\r\n\r\n  return (\r\n    <>\r\n      <section id=\"about\" ref={aboutRef}>\r\n        <div className=\"part part1\">\r\n          <ShadowTitle text={\"AboutMe\"} />\r\n        </div>\r\n        <div className=\"part part2\">\r\n          <div className=\"content\">\r\n            <div className=\"left\">\r\n              <p>CHOI</p>\r\n              <p>YEONSU</p>\r\n              <span>Web Publisher</span>\r\n              <span>Frontend Developer</span>\r\n            </div>\r\n            <div className=\"pic\">\r\n              <img src={faceImage} alt=\"\" />\r\n              <div className=\"bg\">\r\n                <Circle color={ColorArray[1]} />\r\n                <Bar width={10} color={ColorArray[1]} />\r\n                <Bar width={10} color={ColorArray[2]} />\r\n                <Bar width={10} color={ColorArray[1]} />\r\n                <Triangle color={ColorArray[0]} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"right\">\r\n            <h2>소개글 제목</h2>\r\n            <p>\r\n              안녕하세요.\r\n              <b>최연수입니다.</b>\r\n              소개글 들어갈 위치.. 소개글 들어갈 위치 내용. 소개글 들어갈 위치..\r\n              소개글 들어갈 위치 내용.소개글 들어갈 위치.. 소개글 들어갈 위치\r\n              내용. 소개글 들어갈 위치.. 소개글 들어갈 위치 내용. 소개글 들어갈\r\n              위치.. 소개글 들어갈 위치 내용.소개글 들어갈 위치.. 소개글 들어갈\r\n              위치 내용. 소개글 들어갈 위치.. 소개글 들어갈 위치 내용. 소개글\r\n              들어갈 위치.. 소개글 들어갈 위치 내용.소개글 들어갈 위치.. 소개글\r\n              들어갈 위치 내용. 소개글 들어갈 위치.. 소개글 들어갈 위치 내용.\r\n              소개글 들어갈 위치.. 소개글 들어갈 위치 내용.소개글 들어갈 위치..\r\n              소개글 들어갈 위치 내용.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"part part3\">\r\n          <div className=\"content\">\r\n            <div id=\"abilityBG\" ref={$AbilityBg}>\r\n              <canvas ref={$bGCanvas}></canvas>\r\n            </div>\r\n            <ul>\r\n              <li>\r\n                <div className=\"blind\"></div>\r\n                <span className=\"html\">HTML</span>\r\n              </li>\r\n              <li>\r\n                <div className=\"blind\"></div>\r\n                <span className=\"css\">CSS, SCSS</span>\r\n              </li>\r\n              <li>\r\n                <div className=\"blind\"></div>\r\n                <span className=\"js\">JavaScript, JQuery</span>\r\n              </li>\r\n              <li>\r\n                <div className=\"blind\"></div>\r\n                <span className=\"react\">React.js</span>,\r\n                <span className=\"reactnative\"> React.Native</span>\r\n              </li>\r\n            </ul>\r\n            <p className=\"certificate\">\r\n              워드프로세서 1급, 컴퓨터활용능력 2급, 웹디자인기능사\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"part part4\">\r\n          <h2>TimeLine</h2>\r\n          <ul className=\"timeLine\">\r\n            <li className=\"birth\">\r\n              <h6>생년월일</h6>\r\n              <b>1993.10.27</b>\r\n            </li>\r\n\r\n            <li className=\"school\">\r\n              <h6>학력</h6>\r\n              <b>2012.2 </b>\r\n              <p>양산고등학교 졸업</p>\r\n            </li>\r\n\r\n            <li className=\"school\">\r\n              <h6>학력</h6>\r\n              <b>2012.3</b>\r\n              <p>\r\n                홍익대학교 세종캠퍼스\r\n                <br />\r\n                E-마케팅학과 입학\r\n              </p>\r\n            </li>\r\n\r\n            <li className=\"army\">\r\n              <h6>군 복무</h6>\r\n              <b>2014.02 ~ 2016.01</b>\r\n              <p>해양경찰 수경 만기제대</p>\r\n            </li>\r\n\r\n            <li className=\"school\">\r\n              <h6>학력</h6>\r\n              <b>2017.2 ~ 2018.1</b>\r\n              <p>\r\n                중국 선양시 동북대학교\r\n                <br />\r\n                교환학생 과정 수료\r\n              </p>\r\n            </li>\r\n\r\n            <li className=\"other\">\r\n              <h6>대외활동 (동아리)</h6>\r\n              <b>2017.02 ~ 2017.07</b>\r\n              <p>동북대학교 국제교류동아리 공명활동</p>\r\n              <span>동아리 주간 프로그램 기획 및 홍보</span>\r\n              <span>조성아 코스메틱 브랜드 홍보프로모션 진행</span>\r\n            </li>\r\n\r\n            <li className=\"other\">\r\n              <h6>대외활동 (봉사활동)</h6>\r\n              <b>2017.06</b>\r\n              <p>중국 선양한인회</p>\r\n              <span>\r\n                선양한인회 주최의 백일장\r\n                <br />\r\n                행사 진행 및 시설정비\r\n              </span>\r\n            </li>\r\n\r\n            <li className=\"job\">\r\n              <h6>인턴</h6>\r\n              <b>2017.12 ~ 2018.02</b>\r\n              <p>중국기업 연변한동조진무역유한공사 인턴근무</p>\r\n              <span>동북대학교 교환학생 프로그램 홍보영상 제작</span>\r\n            </li>\r\n\r\n            <li className=\"school\">\r\n              <h6>학력</h6>\r\n              <b>2019.2</b>\r\n              <p>\r\n                홍익대학교 세종캠퍼스\r\n                <br />\r\n                E-마케팅학과 졸업\r\n              </p>\r\n            </li>\r\n\r\n            <li className=\"job\">\r\n              <h6>경력</h6>\r\n              <b>2019.10 - 2020.09</b>\r\n              <p>뮬라웨어</p>\r\n              <span>웹개발팀, IMC팀 근무</span>\r\n              <span>\r\n                자사몰 홈페이지 퍼블리싱 업무\r\n                <br />및 자사 온라인 컨텐츠 코딩 관련 업무\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <Next nextLink={\"theKingOfMains\"} />\r\n      </section>\r\n      <Frame />\r\n      <CursorCanvas stageWidth={stageWidth} stageHeight={stageHeight} />\r\n      <div className=\"divLine divLineLeft\" ref={divLineLeftRef}></div>\r\n      <div className=\"divLine divLineRight\" ref={divLineRightRef}></div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst setPart = (target, scrollY) => {\r\n  Object.values(target.children).forEach((item) => {\r\n    if (scrollY > item.offsetTop) item.classList.add(\"on\");\r\n  });\r\n};\r\n\r\nconst setActive = (target, scrollY) => {\r\n  Object.values(target.children).forEach((item) => {\r\n    item.classList.remove(\"active\");\r\n\r\n    if (scrollY === 0) return;\r\n\r\n    if (item.offsetTop <= scrollY) {\r\n      item.classList.add(\"active\");\r\n    }\r\n  });\r\n};\r\n\r\nclass SetbGCanvas {\r\n  constructor(x, y, dx, dy, stageWidth, stageHeight, angle, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.size = Math.random() * 60 + 5;\r\n    this.stageWidth = stageWidth;\r\n    this.stageHeight = stageHeight;\r\n    this.angle = angle;\r\n    this.figureAngle = (Math.PI * 2) / this.angle;\r\n    this.color = color;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.color;\r\n    if (this.angle === 2) {\r\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    } else {\r\n      ctx.translate(this.x, this.y);\r\n      ctx.rotate(\r\n        Math.PI / this.angle +\r\n          Math.atan2(\r\n            this.stageWidth / 2 - this.x,\r\n            -this.stageHeight / 2 + this.y\r\n          )\r\n      );\r\n\r\n      for (let i = 0; i < this.angle; i++) {\r\n        let px = Math.sin(this.figureAngle * i) * this.size,\r\n          py = Math.cos(this.figureAngle * i) * this.size;\r\n        i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\r\n      }\r\n    }\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  update(ctx) {\r\n    if (this.x + this.size > this.stageWidth || this.x - this.size < 0) {\r\n      this.dx *= -1;\r\n    }\r\n    if (this.y + this.size > this.stageHeight || this.y - this.size < 0) {\r\n      this.dy *= -1;\r\n    }\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n\r\n    this.draw(ctx);\r\n  }\r\n}\r\n","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Cursor.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Loading.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Header.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Logo.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\SeperateText.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\routes\\Home.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\hook\\ShadowTitle.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Next.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\ChangePage.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\Frame.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\CursorCanvas.js",["132"],"import { useCallback, useEffect, useRef } from \"react\";\r\nimport { ColorArray } from \"../hook/Color.js\";\r\nimport \"../scss/particleCanvas.scss\";\r\n\r\nexport default function CursorCanvas({ stageWidth, stageHeight }) {\r\n  const $Particle = useRef(),\r\n    $ParticleCanvas = useRef(),\r\n    $Cursor = useRef(),\r\n    $ctxParticleCanvas = useRef();\r\n\r\n  const colorArray = ColorArray;\r\n\r\n  const abilityPercent = [\r\n    { className: \".html\", color: \"#ea642d\", percent: 90 },\r\n    { className: \".css\", color: \"#2ea5d6\", percent: 95 },\r\n    { className: \".js\", color: \"#eab925\", percent: 95 },\r\n    { className: \".react\", color: \"#5ed3f3\", percent: 85 },\r\n    { className: \".reactnative\", color: \"#5ed3f3\", percent: 70 },\r\n  ];\r\n\r\n  let canvasMouse = {\r\n    x: stageWidth - 120,\r\n    y: stageHeight - 120,\r\n    rx: undefined,\r\n    ry: undefined,\r\n    radius: 100,\r\n  };\r\n\r\n  // canvas\r\n  const currentMousePos = (e) => {\r\n    canvasMouse.x = e.clientX;\r\n    canvasMouse.y = e.clientY;\r\n    canvasMouse.rx = e.offsetX;\r\n    canvasMouse.ry = e.offsetY;\r\n  };\r\n\r\n  const ParticleAnimate = useCallback(() => {\r\n    requestAnimationFrame(ParticleAnimate);\r\n    $ctxParticleCanvas.current.clearRect(\r\n      0,\r\n      0,\r\n      $ctxParticleCanvas.current.canvas.width,\r\n      $ctxParticleCanvas.current.canvas.height\r\n    );\r\n\r\n    // drawGrid(\r\n    //   $ctxParticleCanvas.current,\r\n    //   stageWidth,\r\n    //   stageHeight,\r\n    //   1858,\r\n    //   88,\r\n    //   16,\r\n    //   30\r\n    // );\r\n    // );\r\n\r\n    $Cursor.current[0].update(\r\n      $ParticleCanvas.current,\r\n      $ctxParticleCanvas.current,\r\n      canvasMouse\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    $ParticleCanvas.current.width = stageWidth;\r\n    $ParticleCanvas.current.height = stageHeight;\r\n\r\n    $Cursor.current = [];\r\n    $Cursor.current.push(\r\n      new setCursor(\"SCROLL·DOWN·\", 0, 0, 0, \"1\", -75, Math.PI * 2)\r\n    );\r\n  }, [stageWidth, stageHeight, colorArray]);\r\n\r\n  useEffect(() => {\r\n    $ctxParticleCanvas.current = $ParticleCanvas.current.getContext(\"2d\");\r\n    ParticleAnimate();\r\n  }, [ParticleAnimate]);\r\n\r\n  //mousemove\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", (e) => {\r\n      currentMousePos(e);\r\n    });\r\n\r\n    return window.removeEventListener(\"mousemove\", (e) => {\r\n      currentMousePos(e);\r\n    });\r\n  });\r\n  //**mousemove\r\n\r\n  // mouseenter\r\n  useEffect(() => {\r\n    if (document.querySelector(\"#about\")) {\r\n      for (let i = 0; i < abilityPercent.length; i++) {\r\n        document\r\n          .querySelector(`.part3 ul li ${abilityPercent[i].className}`)\r\n          .addEventListener(\"pointerenter\", () => {\r\n            $Cursor.current[0].part = `2`;\r\n            $Cursor.current[0].percent = abilityPercent[i].percent;\r\n            $Cursor.current[0].abilityColor = abilityPercent[i].color;\r\n          });\r\n\r\n        document\r\n          .querySelector(`.part3 ul li ${abilityPercent[i].className}`)\r\n          .addEventListener(\"pointerout\", () => {\r\n            $Cursor.current[0].part = \"1\";\r\n            $Cursor.current[0].current = 0;\r\n            $Cursor.current[0].percent = 0;\r\n            $Cursor.current[0].abilityColor = \"transparent\";\r\n            $Cursor.current[0].abilityArc = 0;\r\n          });\r\n      }\r\n    }\r\n  });\r\n  // **mouseover\r\n\r\n  return (\r\n    <>\r\n      <section id=\"Particle\" ref={$Particle}>\r\n        <canvas id=\"ParticleCanvas\" ref={$ParticleCanvas}></canvas>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nclass setCursor {\r\n  constructor(text, x, y, fontOpacity, part, size, startRotation) {\r\n    this.text = text;\r\n    this.startRotation = startRotation;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.part = part;\r\n    this.size = size;\r\n    this.current = 0;\r\n    this.percent = 0;\r\n    this.abilityColor = \"transparent\";\r\n    this.abilityArc = 0;\r\n    this.click = 0;\r\n    this.fontOpacity = fontOpacity;\r\n    this.numRadsPerLetter = (2 * Math.PI) / this.text.length;\r\n  }\r\n  draw(ctx) {\r\n    ctx.save();\r\n    ctx.translate(this.x, this.y);\r\n\r\n    if (this.part === \"1\") {\r\n      ctx.font = \"20px S-CoreDream-9Black\";\r\n      ctx.rotate(this.startRotation);\r\n      for (let i = 0; i < this.text.length; i++) {\r\n        ctx.save();\r\n        ctx.rotate(i * this.numRadsPerLetter);\r\n        ctx.fillStyle = `rgba(17,17,17,${this.fontOpacity})`;\r\n        ctx.fillText(this.text[i], 0, this.size);\r\n        ctx.restore();\r\n      }\r\n    }\r\n\r\n    if (this.part === \"2\") {\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      ctx.arc(0, 0, 50, 0, Math.PI * 2 * this.abilityArc);\r\n      ctx.strokeStyle = this.abilityColor;\r\n      ctx.lineWidth = 50;\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n      ctx.restore();\r\n      ctx.fillStyle = \"#111\";\r\n\r\n      ctx.save();\r\n      ctx.font = \"20px S-CoreDream-9Black\";\r\n      ctx.translate(60, 70);\r\n      ctx.fillText(`${this.current}`, 0, this.click);\r\n      ctx.restore();\r\n\r\n      ctx.save();\r\n      ctx.font = \"15px S-CoreDream-6Bold\";\r\n      ctx.translate(86, 70);\r\n      ctx.fillText(\"%\", 0, this.click);\r\n      ctx.restore();\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n  update(canvas, ctx, canvasMouse) {\r\n    this.x = canvasMouse.x;\r\n    this.y = canvasMouse.y;\r\n\r\n    if (this.fontOpacity <= 1) {\r\n      this.fontOpacity += 0.01;\r\n    }\r\n    if (this.part === \"1\") {\r\n      document.body.style.cursor = \"pointer\";\r\n      this.startRotation -= 0.003;\r\n    }\r\n    if (this.part === \"2\") {\r\n      document.body.style.cursor = \"none\";\r\n      if (this.current < this.percent) {\r\n        this.current += 1;\r\n      }\r\n      if (this.abilityArc <= `${this.current / 100}`) {\r\n        this.abilityArc += 0.015;\r\n      }\r\n    }\r\n    this.draw(ctx);\r\n  }\r\n}\r\n\r\n// const drawGrid = (\r\n//   ctx,\r\n//   stageWidth,\r\n//   stageHeight,\r\n//   totalWidth,\r\n//   columnsWidth,\r\n//   columnsNum,\r\n//   gapWidth\r\n// ) => {\r\n//   ctx.save();\r\n//   ctx.translate(stageWidth / 2, 0);\r\n\r\n//   for (let i = 0; i < columnsNum; i++) {\r\n//     let recStart = -totalWidth / 2 + columnsWidth * i + gapWidth * i,\r\n//       recEnd = recStart + columnsWidth;\r\n\r\n//     ctx.moveTo(recStart, 0);\r\n//     ctx.lineTo(recEnd, 0);\r\n//     ctx.lineTo(recEnd, stageHeight);\r\n//     ctx.lineTo(recStart, stageHeight);\r\n//     ctx.fillStyle = \"#dbdbdb\";\r\n//     ctx.fill();\r\n//   }\r\n//   ctx.restore();\r\n// };\r\n","C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\Components\\WorkTemplete.js",[],"C:\\Users\\banan\\Desktop\\포트폴리오\\2021\\choiyeonsu\\src\\figure\\Bar.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":38,"column":6,"nodeType":"141","endLine":38,"endColumn":8,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":24,"column":7,"nodeType":"144","endLine":28,"endColumn":4},{"ruleId":"145","severity":1,"message":"146","line":15,"column":8,"nodeType":"147","messageId":"148","endLine":15,"endColumn":12},{"ruleId":"139","severity":1,"message":"149","line":139,"column":6,"nodeType":"141","endLine":139,"endColumn":8,"suggestions":"150"},{"ruleId":"139","severity":1,"message":"140","line":62,"column":6,"nodeType":"141","endLine":62,"endColumn":8,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],["152"],["153"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'canvasMouse'. Either include it or remove the dependency array.","ArrayExpression",["154"],"The 'bomb' object makes the dependencies of useCallback Hook (at line 63) change on every render. To fix this, wrap the initialization of 'bomb' in its own useMemo() Hook.","VariableDeclarator","no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'stageHeight' and 'stageWidth'. Either include them or remove the dependency array.",["155"],["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"157","fix":"161"},"Update the dependencies array to be: [canvasMouse]",{"range":"162","text":"163"},"Update the dependencies array to be: [stageHeight, stageWidth]",{"range":"164","text":"165"},{"range":"166","text":"163"},[1080,1082],"[canvasMouse]",[3764,3766],"[stageHeight, stageWidth]",[1622,1624]]